{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA,oDAAoD;AACpD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;;AAEA,gDAAgD;AAChD;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACvIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,wBAAwB,SAAS,SAAS,SAAS;AACnD,8CAA8C,WAAW;AACzD,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,+CAA+C,IAAI,YAAY,cAAc;AAC7E;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,SAAS,8BAA8B;AAC5E,kDAAkD,cAAc;AAChE,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,EAAE;;;;;;;;;;AC/JP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,0BAA0B,mCAAmC;AAC7D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa;;AAEb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,aAAa;;AAEb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;;;AAG1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;ACtLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD,SAAS;AACT,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT,qCAAqC,WAAW;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN,+BAA+B,cAAc;AAC7C,iCAAiC,WAAW;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,WAAW;AACzD,UAAU;AACV,6CAA6C,WAAW;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV,qCAAqC,WAAW;AAChD,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,yFAAyF;AACzF,UAAU;AACV;AACA;;AAEA,qDAAqD,OAAO;;AAE5D;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;;AAEhE;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,gCAAgC,IAAI;AACpC,8BAA8B,aAAa;AAC3C;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK,EAAE;AACP;;AAEA;;;;;;;;;;AC7PA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;;AAEA;;;;;;;;;;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;UCnEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C,eAAe,mBAAO,CAAC,4CAAgB;;;AAGvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\n    const result = document.querySelector('.calculating__result span');\n    let sex, height, weight, age, ratio;\n\n\n    // устанавливаем стартовые значение по умолчанию в localStorage\n    if (localStorage.getItem('sex')){\n        sex = localStorage.getItem('sex');\n    } else {\n        sex = 'female';\n        localStorage.setItem('sex', sex);\n    }\n\n    if (localStorage.getItem('ratio')){\n        ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375;\n        localStorage.setItem('ratio',ratio);\n    }\n\n\n    function initLocalSettings(selector, activeClass){\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.classList.remove(activeClass);\n            if (elem.getAttribute('id') === localStorage.getItem('sex')){\n                elem.classList.add(activeClass);\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n    function calcTotal(){\n        if(!sex || !height || !weight || !age || !ratio){\n            result.textContent = `____`;\n            return;\n        }\n\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n\n    }\n    // тут вызываем расчет, что бы показало изначальное пустое значение\n    calcTotal();\n\n    // делаю функцию тк блоки пол и физическая активность в принципе похожи по своей сущности, только разный текст\n    function getStaticInformation(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', event => {\n                if (event.target.getAttribute('data-ratio')) {\n                    ratio = +event.target.getAttribute('data-ratio');\n                    localStorage.setItem('ratio', ratio);\n                } else {\n                    sex = event.target.getAttribute('id');\n                    localStorage.setItem('sex', sex);\n                }\n\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);\n                })\n\n                event.target.classList.add(activeClass);\n\n                // вызываем каждый раз calcTotal(); для того, что бы перерасчеты производились после каждого изменения\n                calcTotal();\n            });\n        });\n    }\n    // из-за делегирования получается баг, что можно выбрать и пустые пространства, поэтому придется отказаться\n    /*function getStaticInformation(parentSelector, activeClass) {\n        const elements = document.querySelectorAll(`${parentSelector} div`);\n        document.querySelector(parentSelector).addEventListener('click', event =>{\n            if (event.target.getAttribute('data-ratio')){\n                ratio = +event.target.getAttribute('data-ratio');\n            } else {\n                sex = event.target.getAttribute('id');\n            }\n            console.log(ratio, sex);\n\n            elements.forEach(elem => {\n                elem.classList.remove(activeClass);\n            })\n\n            event.target.classList.add(activeClass);\n\n            // вызываем каждый раз calcTotal(); для того, что бы перерасчеты произовдились после каждого изменения\n            calcTotal();\n        });\n    }*/\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function getDynamicInformation(selector){\n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () =>{\n            // проверка на то что были введены только цифры\n            if (input.value.match(/\\D/g)){\n                input.style.border = '1px solid red';\n            } else {\n                input.style.border = 'none';\n            }\n\n            switch (input.getAttribute('id')){\n                case 'height':\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            }\n            calcTotal();\n        });\n\n    }\n\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nmodule.exports = calc;","function cards() {\n    const menu = document.querySelector('.menu__field');\n    const menuItems = menu.querySelectorAll('.menu__item');\n\n\n    class MenuCard {\n        constructor(src, alt, title, description, price, parentSelector, ...classes) {\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.description = description;\n            this.price = price;\n            this.transfer = 65;\n            this.changeToRUB();\n            this.parentSelector = document.querySelector(parentSelector);\n            this.classes = classes;\n        }\n\n        changeToRUB() {\n            this.price = this.price * this.transfer;\n        }\n\n        render() {\n            const element = document.createElement('div');\n\n            // проверка если мы не передали классы для дива, будет автоматом подставляться\n            if (this.classes.length === 0) {\n                this.element = 'menu__item';\n                element.classList.add(this.element);\n            } else {\n                this.classes.forEach(className => element.classList.add(className));\n            }\n\n            element.innerHTML = `\n            <img src=\"${this.src}\" alt=\"${this.alt}\">\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n            <div class=\"menu__item-descr\">${this.description}</div>\n            <div class=\"menu__item-divider\"></div>\n            <div class=\"menu__item-price\">\n                <div class=\"menu__item-cost\">Цена:</div>\n                <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\n            </div>\n            `;\n\n            this.parentSelector.append(element);\n        }\n    }\n\n\n// получить данные из db.json из меню\n    const getResource = async (url) => {\n        const result = await fetch(url);\n\n        if (!result.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${result.status}`);\n        }\n\n        return await result.json();\n    }\n\n\n    getResource('http://localhost:3000/menu')\n        .then(data => {\n            // применяем деструктуризацию\n            data.forEach(({img, altimg, title, descr, price}) => {\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render()\n            });\n        });\n\n}\n\nmodule.exports = cards;\n\n// мой вариант\n/*class MenuCard {\n    constructor(parentElem, img, subtitle, description, total) {\n        this.parentElem = parentElem;\n        this.img = img;\n        this.subtitle = subtitle;\n        this.description = description;\n        this.total = total;\n    }\n\n    addMenuCard () {\n        // this.parentElem.firstElementChild.style.maxWidth = `1320px`;\n        this.parentElem.firstElementChild.style.flexWrap = `wrap`;\n        this.parentElem.firstElementChild.style.gap = `20px`;\n        this.parentElem.firstElementChild.innerHTML += `\n        <div class=\"menu__item\">\n                <img src=\"${this.img}\" alt=\"${this.img.split('/').slice(-1)}\">\n                <h3 class=\"menu__item-subtitle\">${this.subtitle}</h3>\n                <div class=\"menu__item-descr\">${this.description}</div>\n                <div class=\"menu__item-divider\"></div>\n                <div class=\"menu__item-price\">\n                    <div class=\"menu__item-cost\">Цена:</div>\n                    <div class=\"menu__item-total\"><span>${this.total}</span> грн/день</div>\n                </div>\n        </div> `;\n    }\n}\n\nconst newMenuCard = new MenuCard(\n    menu,\n    'img/tabs/hamburger.jpg',\n    'Меню Фастфуд',\n    'lorem',\n    600);\n\nnewMenuCard.addMenuCard();*/\n\n// ручная инициализация класса\n/*new MenuCard(\n    'img/tabs/vegy.jpg',\n    'vegy',\n    'Меню \"Фитнес\"',\n    'Меню \"Фитнес\" - это новый подход к приготовлению блюд:' +\n    ' больше свежих овощей и фруктов. Продукт активных и здоровых людей.' +\n    ' Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\n    9,\n    '.menu .container',\n    'menu__item'\n).render();\n\nnew MenuCard(\n    'img/tabs/elite.jpg',\n    'elite',\n    'Меню “Премиум',\n    'В меню “Премиум” мы используем не только красивый дизайн упаковки,' +\n    ' но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное' +\n    ' меню без похода в ресторан!',\n    13,\n    '.menu .container',\n    'menu__item'\n).render();\n\nnew MenuCard(\n    'img/tabs/post.jpg',\n    'post',\n    'Меню \"Постное\"',\n    'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов' +\n    ' животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество' +\n    ' белков за счет тофу и импортных вегетарианских стейков.',\n    10,\n    '.menu .container',\n).render();*/\n\n// пример на axios заполнения карточек меню\n/*axios.get('http://localhost:3000/menu')\n    .then(data => {\n        data.data.forEach(({img, altimg, title, descr, price}) => {\n            new MenuCard(\n                img,\n                altimg,\n                title,\n                descr,\n                price,\n                '.menu .container'\n            ).render()\n        });\n    });*/","function forms(){\n    const messages = {\n        loading: 'icons/spinner.svg',\n        success: 'Спасибо! Скоро с вами свяжемся',\n        failure: 'Что-то пошло не так...'\n    }\n\n    // функция с каким то асинхронным кодом используем асинхрон, для того что бы загружать/выгружать данные\n    const postData = async (url, dataJSON) => {\n        // await - ожидает пока вернется результат запроса\n        const result = await fetch(url, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: dataJSON\n        });\n\n        // .json() – декодирует ответ в формате JSON в обычный js object,\n        // тоже ждем пока распарсится json и только потом его вернем\n        return await result.json();\n    };\n\n// первый вариант с FETCH\n    /*function bindPostData(form) {\n        form.addEventListener('submit', event => {\n            event.preventDefault();\n\n            const spinner = document.createElement('img');\n            spinner.src = messages.loading;\n            spinner.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            // устанавливаю spinner после элементов, а не в них\n            form.insertAdjacentElement('afterend', spinner);\n\n            const formData = new FormData(form);\n            const object = {};\n            formData.forEach(function (value, key) {\n                object[key] = value;\n            });\n\n            fetch('server.php', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(object)\n            }).then(data => data.text())\n                .then(data => {\n                    console.log(data);\n                    showThanksModal(messages.success);\n                    spinner.remove();\n                }).catch(() => {\n                showThanksModal(messages.failure);\n            }).finally(() => {\n                form.reset();\n            });\n\n        });\n    }*/\n\n// FORMS сделанные с помощью fetch\n    function bindPostData(form) {\n        form.addEventListener('submit', event => {\n            event.preventDefault();\n\n            const spinner = document.createElement('img');\n            spinner.src = messages.loading;\n            spinner.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            // устанавливаю spinner после элементов, а не в них\n            form.insertAdjacentElement('afterend', spinner);\n\n            const formData = new FormData(form);\n            /*сначала нашу собранную formData превращаем в массив-массивов formData.entries()\n            после превращаем в Object, а его превращаем в JSON*/\n            const dataJSON = JSON.stringify(Object.fromEntries(formData.entries()));\n\n            postData('http://localhost:3000/requests', dataJSON)\n                .then(data => {\n                    console.log(data);\n                    showThanksModal(messages.success);\n                    spinner.remove();\n                }).catch(() => {\n                showThanksModal(messages.failure);\n            }).finally(() => {\n                form.reset();\n            });\n\n        });\n    }\n\n// FORMS сделанные с помощью XMLHttpRequest\n    /*function postDataUseXMLHttpRequest(form){\n        form.addEventListener('submit', (event) =>{\n            event.preventDefault();\n\n            // блок кода для того что бы сообщение об успехе выводилось в эту же фору\n            /!*const statusMessageDiv = document.createElement('div');\n            statusMessageDiv.classList.add('status');\n            statusMessageDiv.textContent = messages.loading;\n            form.append(statusMessageDiv);*!/\n\n\n            const spinner = document.createElement('img');\n            spinner.src = messages.loading;\n            spinner.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n            // form.append(spinner);\n            form.insertAdjacentElement('afterend', spinner);\n\n            const request = new XMLHttpRequest();\n            request.open('POST', 'server.php');\n\n            // при POST заголовок не нужно давать заголовки в обычном формате не JSON\n            // request.setRequestHeader('Content-type', 'multipart/form-data');\n\n            // теперь отправляем данные на сервер в формате JSON\n            request.setRequestHeader('Content-type', 'application/json');\n\n            // получить все данные из формы\n            const formData = new FormData(form);\n\n            // кусок для JSON, если хотим передавать обычный js object то он не нужен\n            const object = {};\n            formData.forEach(function (value, key){\n                object[key] = value;\n            });\n            const json = JSON.stringify(object);\n\n            // request.send(formData);\n            request.send(json);\n\n            request.addEventListener('load', () =>{\n                if (request.status === 200){\n                    console.log(request.response);\n                    showThanksModal(messages.success);\n                    // очистка полей формы, после успеха\n                    form.reset();\n                    // строчка для удаления сообщения из модального окна\n                    // statusMessageDiv.remove();\n                    spinner.remove();\n                } else{\n                    showThanksModal(messages.failure);\n                }\n            });\n        });\n    }*/\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModalWindow();\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n        `;\n\n        document.querySelector('.modal').append(thanksModal);\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModalWindow();\n        }, 4000);\n    }\n\n    const form = document.querySelectorAll('form');\n\n    form.forEach(item => {\n        bindPostData(item);\n    });\n}\n\nmodule.exports = forms;\n","function modal(){\n    const modalWindow = document.querySelector('.modal');\n// const modalCloseBtn = document.querySelector('[data-close]');\n    const btnContactUs = document.querySelectorAll('[data-modal]');\n\n    function openModalWindow() {\n        modalWindow.classList.remove('hide');\n        modalWindow.classList.add('show');\n        // modalWindow.classList.toggle('show')\n        // функционал отключения прокрутки\n        document.body.style.overflow = 'hidden';\n        // если пользователь сам открыл окно, то оно не будет открываться снова\n        clearInterval(modalTimerId);\n    }\n\n    function closeModalWindow() {\n        modalWindow.classList.add('hide');\n        modalWindow.classList.remove('show');\n        // modalWindow.classList.toggle('show');\n        document.body.style.overflow = '';\n    }\n\n    btnContactUs.forEach(btn => {\n        btn.addEventListener('click', (event) => {\n            const target = event.target;\n\n            if (target && target.classList.contains('btn')) {\n                openModalWindow();\n            }\n        })\n    });\n\n    modalWindow.addEventListener('click', (event) => {\n        const target = event.target;\n\n        if (target.getAttribute('data-close') == '' || target === modalWindow) {\n            closeModalWindow();\n        }\n    });\n\n    document.addEventListener('keydown', (event) => {\n        if (event.code === 'Escape' && modalWindow.classList.contains('show')) {\n            closeModalWindow();\n        }\n    });\n\n// делаем всплывающие окно когда страница пролистана до определенного уровня\n// мой вариант, но не продуманно как не работать после закрытия окна\n    /*function getHeight() {\n        let height = window.getComputedStyle(document.body).height;\n\n        return height.split('.')[0];\n    }\n\n    console.log(document.documentElement.scrollTop, Math.trunc(getHeight() * 0.7));\n\n    document.addEventListener('scroll', () =>{\n        if (document.documentElement.scrollTop  >= Math.trunc(getHeight() * 0.7)) {\n            openModalWindow();\n        }\n    });*/\n    const modalTimerId = setTimeout(openModalWindow, 50000);\n\n    function showModalByScroll() {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModalWindow();\n            // удаляем событие прокрутки, после того как оно выполнилось\n            window.removeEventListener('scroll', showModalByScroll);\n        }\n    }\n\n    window.addEventListener('scroll', showModalByScroll);\n}\n\nmodule.exports = modal;\n","function slider() {\n    const slides = document.querySelectorAll('.offer__slide');\n    const previous = document.querySelector('.offer__slider-prev');\n    const next = document.querySelector('.offer__slider-next');\n    const total = document.querySelector('#total');\n    const current = document.querySelector('#current');\n    const slidesWrapper = document.querySelector('.offer__slider-wrapper');\n    const slidesField = document.querySelector('.offer__slider-inner');\n    const widthSlide = window.getComputedStyle(slidesWrapper).width;\n    const slider = document.querySelector('.offer__slider');\n\n    let slideIndex = 1;\n    let offset = 0;\n\n    //SLIDER v1\n    /*showSlides(slideIndex);\n        if (slides.length < 10){\n            total.textContent = `0${slides.length}`;\n        }else{\n            total.textContent = `${slides.length}`;\n        }\n    function showSlides(slideIndex){\n        if (slideIndex > slides.length){\n            slideIndex = 1;\n        }\n\n        if (slideIndex < 1) {\n            slideIndex = slides.length;\n        }\n\n        slides.forEach(item => item.style.display = 'none');\n        slides[slideIndex - 1].style.display = 'block';\n\n        if (slides.length < 10){\n            current.textContent = `0${slideIndex}`;\n        }else{\n            current.textContent = `${slideIndex}`;\n        }\n    }\n\n    function plusSlides(n) {\n        showSlides(slideIndex += n);\n    }\n\n    previous.addEventListener('click', () =>{\n        plusSlides(-1);\n        console.log(slideIndex)\n    })\n\n    next.addEventListener('click', () => {\n        plusSlides(1);\n        console.log(slideIndex)\n    })*/\n\n    //SLIDER v2\n    // помещаем все наши слайдеры в slidesField для этого надо рассчитать его ширину\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`;\n        current.textContent = `0${slideIndex}`;\n    } else {\n        total.textContent = `${slides.length}`;\n        current.textContent = `${slideIndex}`;\n    }\n\n    slidesField.style.width = 100 * slides.length + '%';\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n\n    // ограничиваем количество показываемых слайдов\n    // overflow = 'hidden' - не показывает объекты, которые не попадают в размеры\n    slidesWrapper.style.overflow = 'hidden';\n\n    slides.forEach(slide => {\n        slide.style.width = widthSlide;\n    });\n\n    // делаем точечки под слайдером\n    const indicators = document.createElement('ol');\n    const dots = [];\n    slider.style.position = 'relative';\n\n    indicators.classList.add('carousel-indicators');\n    indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n    slider.append(indicators);\n\n    for (let iter = 0; iter < slides.length; iter++) {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', iter + 1);\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n        if (iter === 0) {\n            dot.style.opacity = '1';\n        }\n        indicators.append(dot);\n        dots.push(dot);\n    }\n\n    function showNumberSlide(slides, slideIndex, currentPosition) {\n        if (slides.length < 10) {\n            currentPosition.textContent = `0${slideIndex}`;\n        } else {\n            currentPosition.textContent = `${slideIndex}`;\n        }\n    }\n\n    function showCurrentDot(dots, slideIndex) {\n        // ставим всем точкам прозрачность по умолчанию\n        dots.forEach(dot => dot.style.opacity = '.5');\n        dots[slideIndex - 1].style.opacity = '1';\n    }\n\n    next.addEventListener('click', () => {\n        // если у нас последний слайд, а это (4слайда * 650) = 2600, то последний слайд получается 2600 - 650\n        // а мы работаем с пикселями, те, если мы достигли отметки в 1950px, то отматываем назад\n        if (offset === +widthSlide.slice(0, widthSlide.length - 2) * (slides.length - 1)) {\n            offset = 0;\n        } else {\n            offset += +widthSlide.slice(0, widthSlide.length - 2);\n            console.log(offset)\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex === slides.length) {\n            slideIndex = 1;\n        } else {\n            slideIndex++;\n        }\n        showNumberSlide(slides, slideIndex, current);\n        /*if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`;\n        } else {\n            current.textContent = `${slideIndex}`;\n        }*/\n        showCurrentDot(dots, slideIndex);\n    });\n\n    previous.addEventListener('click', () => {\n        if (offset === 0) {\n            offset = +widthSlide.replace(/\\D/g, '') * (slides.length-1);\n            // старый вариант через срез\n            /*offset = +widthSlide.slice(0, widthSlide.length - 2) * (slides.length - 1);*/\n        } else {\n            offset -= +widthSlide.slice(0, widthSlide.length - 2);\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`;\n\n        if (slideIndex === 1) {\n            slideIndex = slides.length;\n        } else {\n            slideIndex--;\n        }\n\n        showNumberSlide(slides, slideIndex, current);\n\n        showCurrentDot(dots, slideIndex);\n    });\n\n    dots.forEach(dot => {\n        dot.addEventListener('click', event => {\n            const slideTo = event.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo;\n            offset = +widthSlide.slice(0, widthSlide.length - 2) * (slideTo - 1);\n\n            slidesField.style.transform = `translateX(-${offset}px)`;\n\n            showNumberSlide(slides, slideIndex, current);\n            showCurrentDot(dots, slideIndex);\n        });\n    });\n\n    // мой слайдер\n    /*const offerSlider = document.querySelector('.offer__slider');\n    const current = document.getElementById('current');\n    const total = document.getElementById('total');\n    const slide = offerSlider.querySelectorAll('.offer__slide');\n\n\n    function showOfferSlide(i = 0) {\n        slide[i].classList.add('show');\n        slide[i].classList.remove('hide');\n\n        current.innerText = `0${i+1}`;\n        total.innerText = `0${slide.length}`;\n    }\n\n    function hideOfferSlide() {\n        slide.forEach(item => {\n            item.classList.add('hide');\n            item.classList.remove('show');\n        });\n    }\n\n    hideOfferSlide();\n    showOfferSlide();\n\n    function sliderCounter(elem) {\n        let counter = 0;\n        return function (way) {\n            if (way === 'next'){\n                if (counter >= elem.length - 1) {\n                    counter = -1\n                }\n                return ++counter;\n            } else if (way === 'prev'){\n                if (counter <= 0) {\n                    counter = elem.length\n                }\n                return --counter;\n            }\n        };\n    }\n\n    const iterator = sliderCounter(slide);\n\n    offerSlider.addEventListener('click', event => {\n        const target = event.target;\n        if (target && target.classList.contains('offer__slider-prev') || target.getAttribute(\"alt\") === 'prev') {\n            hideOfferSlide();\n            showOfferSlide(iterator('prev'));\n        } else if (target && target.classList.contains('offer__slider-next') || target.getAttribute(\"alt\") === 'next') {\n            hideOfferSlide();\n            showOfferSlide(iterator('next'));\n        }\n    });*/\n}\n\nmodule.exports = slider;","// TABS\nfunction tabs() {\n\n    const tabs = document.querySelectorAll('.tabheader__item');\n    const tabsContent = document.querySelectorAll('.tabcontent');\n    const tabsParent = document.querySelector('.tabheader__items');\n\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            // item.style.display = 'none';\n            item.classList.add('hide');\n            item.classList.remove('show', 'fade');\n        })\n\n        tabs.forEach(item => {\n            item.classList.remove('tabheader__item_active');\n        })\n    }\n\n    // i = 0 это стандарт ES6 - значение по умолчание\n    function showTabContent(i = 0) {\n        // tabsContent[i].style.display = 'block';\n        tabsContent[i].classList.add('show', 'fade');\n        tabsContent[i].classList.remove('hide');\n        tabs[i].classList.add('tabheader__item_active');\n    }\n\n    // сначала скрываем первично слайды, а после отображаем первый слайд\n    hideTabContent();\n    showTabContent();\n\n    // а после уже навешиваем обработчи событий\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target;\n\n        if (target && target.classList.contains('tabheader__item')) {\n            // перебираем все элементы, что бы получить их индексы и сравниваем\n            tabs.forEach((item, i) => {\n                if (target === item) {\n                    hideTabContent();\n                    showTabContent(i);\n                }\n            });\n        }\n    });\n\n}\n\nmodule.exports = tabs;\n\n\n\n\n\n\n","function timer () {\n    const deadline = '2023-04-16';\n\n    function getTimeRemaining(endTime) {\n        const t = Date.parse(endTime) - Date.parse(new Date());\n        let days, hours, minutes, seconds;\n        // проверка что бы счетчик не считал после того как дата истечет\n        if (t <= 0) {\n            days = 0;\n            hours = 0;\n            minutes = 0;\n            seconds = 0;\n        } else {\n            // (1000 * 60 - кол-во мс в 1 мин) * 60 1в часе) * 24 в сутках) - сколько в сутках миллисекунд\n            days = Math.floor(t / (1000 * 60 * 60 * 24));\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n            minutes = Math.floor((t / (1000 / 60) % 60));\n            seconds = Math.floor((t / 1000) % 60);\n        }\n\n        return {\n            \"total\": t,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds,\n        };\n    }\n\n    function getZero(num) {\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    function setClock(selector, endTime) {\n        const timer = document.querySelector(selector);\n        const days = timer.querySelector('#days');\n        const hours = timer.querySelector('#hours');\n        const minutes = timer.querySelector('#minutes');\n        const seconds = timer.querySelector('#seconds');\n        // устанавливаем обновление интервала каждую секунду 1 сек = 1000 мили сек\n        const timeInterval = setInterval(updateClock, 1000);\n\n        // что бы время при старте не мигало время\n        updateClock();\n\n        function updateClock() {\n            const t = getTimeRemaining(endTime);\n\n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n\n            // если наш total - deadline = 0 наступила дата, то останавливаем наш интервал\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    setClock('.timer', deadline);\n}\n\nmodule.exports = timer;\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const tabs = require('./modules/tabs'),\n        modal = require('./modules/modal'),\n        timer = require('./modules/timer'),\n        cards = require('./modules/cards'),\n        forms = require('./modules/forms'),\n        slider = require('./modules/slider'),\n        calc = require('./modules/calc');\n\n\n    tabs();\n    modal();\n    timer();\n    cards();\n    forms();\n    slider();\n    calc();\n\n});"],"names":[],"sourceRoot":""}